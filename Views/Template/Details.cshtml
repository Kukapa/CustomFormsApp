@model CustomFormsApp.Models.TemplateDetailsViewModel
 
@{
    ViewData["Title"] = "Template Details";
}

<div class="container mt-4">
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success">
            @TempData["SuccessMessage"]
        </div>
    }

    <h2>@Model.Template.Title</h2>

    <ul class="nav nav-tabs" id="templateDetailsTabs" role="tablist">
        <li class="nav-item">
            <a class="nav-link active" id="settings-tab" data-toggle="tab" href="#settings" role="tab" aria-controls="settings" aria-selected="true">Settings</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" id="questions-tab" data-toggle="tab" href="#questions" role="tab" aria-controls="questions" aria-selected="false">Questions</a>
        </li>
        @if (Model.CanManageTemplate)
            {
                <li class="nav-item">
                    <a class="nav-link" id="results-tab" data-toggle="tab" href="#results" role="tab" aria-controls="results" aria-selected="false">Results</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" id="aggregated-tab" data-toggle="tab" href="#aggregated" role="tab" aria-controls="aggregated" aria-selected="false">Aggregated Results</a>
                </li>  
            }
    </ul>

    <div class="tab-content mt-3" id="templateDetailsContent">
        <div class="tab-pane fade show active" id="settings" role="tabpanel" aria-labelledby="settings-tab">
            <h4>Template Settings</h4>
            <p><strong>Description:</strong> @Model.Template.Description</p>
            <p><strong>Public:</strong> @(Model.Template.IsPublic ? "Yes" : "No")</p>
            <p>
                <strong>Tags:</strong>
                @if (Model.Tags != null && Model.Tags.Any())
                {
                    @string.Join(", ", Model.Tags.Select(t => t.Name))
                }
                else
                {
                    <span>No tags</span>
                }
            </p>
            @if (Model.CanManageTemplate)
            {
               <a href="@Url.Action("Edit", "Template", new { id = Model.Template.Id })" class="btn btn-primary">Edit Template</a>
               <a asp-action="Answer" asp-controller="Form" asp-route-templateId="@Model.Template.Id" class="btn btn-primary">Fill the Form</a>
               <a asp-action="AddQuestion" asp-route-templateId="@Model.Template.Id" class="btn btn-success">Add Question</a>
            }
           
            @if (User.Identity.IsAuthenticated && !Model.CanManageTemplate)
            {
                <a asp-action="Answer" asp-controller="Form" asp-route-templateId="@Model.Template.Id" class="btn btn-primary">Fill the Form</a>
            }

            <div class="mt-4">
                <form asp-action="ToggleLike" asp-controller="Template" method="post">
                    <input type="hidden" name="templateId" value="@Model.Template.Id" />
                    <button type="submit" class="btn btn-primary">
                        @if (Model.HasUserLiked)
                        {
                            <i class="fas fa-thumbs-down"></i>
                        }
                        else
                        {
                            <i class="fas fa-thumbs-up"></i> <text>Like</text>
                        }
                    </button>
                    <span class="ml-2">Total Likes: @Model.Template.Likes.Count</span>
                </form>

                <h4>Comments (@Model.Template.Comments.Count)</h4>
                <ul class="list-group mt-3">
                    @foreach (var comment in Model.Template.Comments)
                    {
                        <li class="list-group-item">
                            <strong>@comment.UserName</strong>: @comment.Content
                            <br /><small>@comment.CreatedDate.ToString("g")</small>
                        </li>
                    }
                </ul>

                @if (User.Identity.IsAuthenticated)
                {
                    <form asp-action="AddComment" asp-controller="Template" method="post" class="mt-3">
                        <textarea name="commentContent" class="form-control" rows="3" placeholder="Add a comment..." required></textarea>
                        <input type="hidden" name="templateId" value="@Model.Template.Id" />
                        <button type="submit" class="btn btn-primary mt-2">Post Comment</button>
                    </form>
                }
                else
                {
                    <p>You must be logged in to post comments.</p>
                }
            </div>
        </div>

        <div class="tab-pane fade" id="questions" role="tabpanel" aria-labelledby="questions-tab">
            <h4>Questions</h4>

            @if (Model.Template.Questions != null && Model.Template.Questions.Any())
            {
                <ul class="list-group mt-3">
                    @foreach (var question in Model.Template.Questions)
                    {
                        <li class="list-group-item">
                            <strong>@question.Title:</strong> @question.Description
                            @if (Model.CanManageTemplate)
                            {
                                <a href="@Url.Action("EditQuestion", "Template", new { questionId = question.Id })" class="btn btn-sm btn-warning">Edit</a>
                                <form asp-action="DeleteQuestion" asp-route-id="@question.Id" method="post" style="display:inline;">
                                    <button type="submit" class="btn btn-sm btn-danger" onclick="return confirm('Are you sure you want to delete this question?');">Delete</button>
                                    @Html.AntiForgeryToken()
                                </form>
                            }
                        </li>
                    }
                </ul>
            }
            else
            {
                <p>No questions available.</p>
            }
        </div>

        <div class="tab-pane fade" id="results" role="tabpanel" aria-labelledby="results-tab">
            <h4>Results</h4>
            <ul class="list-group mt-3">
                @foreach (var filledForm in Model.FormResults)
                {
                    <li class="list-group-item">
                        <h5>Submission ID: @filledForm.Id</h5>
                        Submitted By: @filledForm.User.UserName
                        <br />
                        <a href="@Url.Action("ViewAnswers", "Template", new { filledFormId = filledForm.Id })" class="btn btn-primary mt-2">Check Answers</a>
                    </li>
                }
            </ul>
        </div>

        <div class="tab-pane fade" id="aggregated" role="tabpanel" aria-labelledby="aggregated-tab">
            <h4>Aggregated Results</h4>
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>Question</th>
                        <th>Average Answer</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var question in Model.Template.Questions.Where(q => q.Type == CustomFormsApp.Models.QuestionType.PositiveInteger))
                    {
                        <tr>
                            <td>@question.Title</td>
                            <td>@Model.Averages[question.Id]</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>
